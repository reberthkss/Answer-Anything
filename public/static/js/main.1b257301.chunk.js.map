{"version":3,"sources":["redux/ActionTypes.ts","Screen/NotFound.tsx","resources/LoginBackground.jpg","utils/Services/Helpers.ts","redux/reducer.ts","utils/Data/ResearchStatus.ts","redux/ConfigureStore.ts","utils/Data/UserData.ts","redux/Actions.ts","utils/Services/GoogleAuth.ts","Screen/LoginScreen/LoginScreen.tsx","utils/Hooks/Hooks.ts","Components/AppToolbar/AppToolbar.tsx","Components/SelectResearch/SelectResearch.tsx","Components/Overview/OverviewPaper.tsx","Components/List/List.tsx","Components/ResearchList/ResearchList.tsx","utils/Data/ResearchQuestionData.ts","utils/Data/ResearchData.ts","utils/Services/FirebaseManager/FirestoreManager.ts","utils/Steps.ts","Components/NewOption/NewOption.tsx","Components/RegisterResearchCarousel/StepTwo.tsx","resources/Icons/FacebookIcon.tsx","resources/Icons/LinkedinIcon.tsx","resources/Icons/TelegramIcon.tsx","resources/Icons/WhatsAppIcon.tsx","Components/ShareSocialMedia/ShareSocialMedia.tsx","utils/Services/ShareManager/ShareManager.ts","Components/RegisterResearchCarousel/ShareResearch.tsx","Components/AnimatedComponents/Loading/Loading.tsx","Components/RegisterResearchCarousel/RegisterResearchCarousel.tsx","Screen/RegisterResearch/RegisterResearchScreen.tsx","utils/Data/AnswerData.ts","utils/Services/AnswerResearchManager/AnswerResearchManager.ts","Components/Chart/ChartWrapper.tsx","Screen/Analysis/Analysis.tsx","Screen/DashboardScreen/DashboardScreen.tsx","Screen/MainScreen/MainScreen.tsx","Screen/RootDiretory/RootDirectory.tsx","utils/Validators/Validators.ts","Components/AnswerResearchCarousel/Greeting.tsx","Components/AnswerResearchCarousel/AnswerQuestion.tsx","Components/AnswerResearchCarousel/Conclusion.tsx","Components/AnswerResearchCarousel/AnswerResearchCarousel.tsx","Screen/AnswerResearch/AnswerResearchScreen.tsx","App.tsx","serviceWorker.ts","utils/config.ts","index.tsx"],"names":["ActionsTypes","NotFound","returnRepositoryResponse","isSuccessful","error","ResearchStatus","initialState","user","research","researchs","answerResearchPayload","answersOfResearch","persistConfig","key","storage","persistedReducer","persistReducer","state","action","type","payload","SAVE_AUTHENTICATED_USER","CLEAR_SAVED_USER","SAVE_RESEARCHS","SAVE_RESEARCH","SAVE_ANSWER_RESEARCH_PAYLOAD","SAVE_ANSWERS_OF_RESEARCH","store","createStore","persistor","persistStore","getStore","UserData","data","profile","additionalUserInfo","userId","uid","this","id","email","firstName","lastName","avatarUrl","saveResearchs","saveResearch","saveAnswerResearchPayload","researchPayload","GoogleAuth","provider","firebase","auth","languageCode","GoogleAuthProvider","signInWithPopup","response","userData","dispatch","console","log","signOut","LoginScreen","useState","isLoading","styles","useStyles","dimensions","width","window","innerWidth","height","innerHeight","setDimensions","useEffect","updateDimensions","addEventListener","removeEventListener","useDimensions","history","useHistory","authGoogle","_handleLogin","a","doLogin","push","className","backgroundImage","style","Grid","gridContainer","container","gridItem","item","Card","card","elevation","onClick","makeStyles","display","justifyContent","alignItems","BackgroundLogin","backgroundRepeat","backgroundSize","AppPopOver","open","anchorElement","handleClose","children","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","AppToolbar","googleAuth","setAnchorEl","handleClick","event","currentTarget","Boolean","undefined","url","useRouteMatch","useSelector","AppBar","position","Toolbar","to","Typography","variant","Paper","Avatar","src","doLogout","SelectResearch","OverviewPaper","List","renderItem","map","ResearchList","researchData","title","ResearchQuestionData","question","options","selectedOption","newOptions","forEach","value","Research","subtitle","description","questions","status","roles","index","parseFirebase","toUpperCase","from","FirestoreManager","TAG","firestore","getState","collection","COLLECTIONS","RESEARCH","where","get","docs","doc","result","message","add","researchSaved","answerResearchId","researchId","update","delete","ANSWERED_QUESTIONS","STEPS","NewOption","onDeleteOption","onUpdateValue","disabled","setDisabled","setError","optionValue","setOption","_handleKey","_fieldAreInvalid","_deleteOption","Tooltip","IconButton","defaultValue","autoFocus","onKeyDown","onChange","target","placeholder","onBlur","generateInitialOptions","Array","length","_","initialQuestionsState","StepTwo","onGetQuestions","savedQuestions","currentQuestion","setCurrentQuestion","setQuestions","textFieldRef","useRef","_goBackToPreviousQuestion","_renderErrorSpanByEmptyField","field","_renderOptions","option","currentOption","newQuestions","splice","questionIndex","_updateOptionValue","_addNewOption","lastQuestion","reduce","optionA","optionB","newQuestionState","filter","newOption","_renderAddNewOption","_showNextQuestion","_nextButtonIsDisabled","_generateNewQuestion","current","aria-label","fontSize","cQuestion","TextField","fullWidth","inputRef","label","defaultProps","FacebookIcon","xmlns","viewBox","version","transform","fill","fillOpacity","fillRule","stroke","d","LinkedinIcon","stroke-width","fill-rule","x","y","rx","TelegramIcon","x1","x2","y1","y2","offset","stop-color","cx","cy","r","WhatsappIcon","ShareSocialMedia","FacebookShareButton","LinkedinShareButton","TelegramShareButton","WhatsappShareButton","ShareManager","location","host","ShareResearch","rows","multiline","shareResearch","Loading","animating","setAnimating","spring1","props1","useSpring","ref","opacity","next","cancel","spring2","props2","spring3","props3","useChain","backgroundColor","flexDirection","div","borderRadius","margin","mapOptions","optionsMap","Map","set","getRoles","owner","rolesMap","RegisterCarousel","loading","setLoading","ONE","actualStep","setStep","saveQuestions","firestoreManager","_decreaseStep","_renderErrorByEmptyTextField","_saveQuestions","toString","OPEN","write","_increaseStep","fields","isValid","_fieldsAreValid","TWO","_stepTwoFieldsAreValid","_handleSavingQuestion","THREE","success","raised","_renderAsFromStep","RegisterResearchScreen","AnswerData","answeredQuestions","answeredQuestion","name","parseInt","AnswerResearchManager","answerData","res","answeredQuestionId","FieldValue","arrayUnion","answers","querySnapshot","ChartWrapper","labels","backgroundColors","chartRef","props","Chart","datasets","borderColor","borderWidth","text","scales","yAxes","ticks","beginAtZero","randomColor","require","Analysis","content","useParams","dataSet","setDataset","find","computeAnswers","dataSetProps","answer","questionData","questionDataset","questionId","indexOf","optionData","optionIndex","count","answerResearchManager","loadAnswersByResearch","renderOptionsChart","questionFromResearch","Error","optionsData","format","alpha","renderCharts","loadAnswer","then","catch","CircularProgress","DashboardScreen","path","read","exact","component","MainScreen","RootDirectory","Validators","test","toLocaleLowerCase","Greeting","onStartQuestionnaire","inputsStatus","setInputStatus","setUserData","required","helperText","isEmailValid","onFocus","AnswerQuestion","onFinishAnswerQuestion","onAnswerQuestion","selectedOptionIndex","size","handleOptionSelect","Conclusion","finishMessage","researchUrl","AnswerResearchCarousel","onGetSelectedOption","currentStep","setAnswerData","_handleEndOfResearch","endQuestionnaire","resFromFirebase","GetNextArrow","allResearchsIsAnswered","startQuestionnaire","GetContent","AnswerResearchScreen","updateResearch","isInvalidResearch","setIsInvalidResearch","currentResearch","loadResearch","handleOptionSelection","questionPosition","newResearch","saveAnsweredQuestion","replace","App","hostname","match","prodConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b257301.chunk.js","sourcesContent":["export enum ActionsTypes {\r\n    SAVE_AUTHENTICATED_USER,\r\n    SAVE_RESEARCHS,\r\n    SAVE_RESEARCH,\r\n    SAVE_ANSWER_RESEARCH_PAYLOAD,\r\n    SAVE_ANSWERS_OF_RESEARCH,\r\n    CLEAR_SAVED_USER,\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            404 not found\r\n            </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/LoginBackground.f4b253be.jpg\";","export interface RepositoryResponse {\r\n    isSuccessful: boolean,\r\n    error: any\r\n}\r\nexport const returnRepositoryResponse = (isSuccessful: boolean, error: any): RepositoryResponse => ({isSuccessful, error});\r\n","import {ActionsTypes} from \"./ActionTypes\";\r\nimport {UserData} from \"../utils/Data/UserData\";\r\nimport {Research} from \"../utils/Data/ResearchData\";\r\nimport {AnswerData} from \"../utils/Data/AnswerData\";\r\n\r\n\r\n/*Mudar estrutura do redux para separar:\r\n\r\n *   Os reducers do Dashboard do usuário\r\n *   Os reducers da tela de respostas\r\n\r\n +/- assim:\r\n\r\n dashboard: {},\r\n answerScreen: {}\r\n\r\n */\r\n\r\nexport interface AnswerResearchProps {researchId: string, answers: AnswerData[]}\r\nexport interface ResearchProps {id: string, research: Research}\r\nexport interface ReduxState {\r\n    user: UserData | null,\r\n    research: Research | null,\r\n    researchs: ResearchProps[],\r\n    answerResearchPayload: AnswerResearchPayloadProps | null,\r\n    answersOfResearch: AnswerResearchProps | null\r\n}\r\n\r\nexport interface ReduxAction {\r\n    payload?: any\r\n    type: ActionsTypes\r\n}\r\n\r\nexport interface AnswerResearchPayloadProps {\r\n    researchId: string,\r\n    answerResearchId: string\r\n}\r\n\r\nconst initialState: ReduxState = {\r\n    user: null,\r\n    research: null,\r\n    researchs: [],\r\n    answerResearchPayload: null,\r\n    answersOfResearch: null\r\n}\r\n\r\nexport const rootReducer = (state: ReduxState = initialState, action: ReduxAction): ReduxState => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case ActionsTypes.SAVE_AUTHENTICATED_USER:\r\n            return {...state, user: payload};\r\n        case ActionsTypes.CLEAR_SAVED_USER:\r\n            return {...state, user: null};\r\n        case ActionsTypes.SAVE_RESEARCHS:\r\n            return {...state, researchs: payload};\r\n        case ActionsTypes.SAVE_RESEARCH:\r\n            return {...state, research: payload};\r\n        case ActionsTypes.SAVE_ANSWER_RESEARCH_PAYLOAD:\r\n            return {...state, answerResearchPayload: payload};\r\n        case ActionsTypes.SAVE_ANSWERS_OF_RESEARCH:\r\n            return {...state, answersOfResearch: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export enum ResearchStatus {\r\n    OPEN = \"OPEN\",\r\n    PROGRESS = \"PROGRESS\",\r\n    CLOSED = \"CLOSED\"\r\n}\r\nexport type StatusTypes = \"OPEN\" | \"PROGRESS\" | \"CLOSED\";\r\n","import { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {rootReducer} from \"./reducer\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n\r\nexport const getStore = () => store;\r\n","import firebase from \"firebase\";\r\n\r\nexport interface ProfileData {\r\n    firstName: string,\r\n    lastName: string,\r\n    id: string,\r\n    email: string,\r\n    avatarUrl: string\r\n}\r\nexport interface UserDataModel {\r\n    profile: ProfileData\r\n}\r\n\r\nexport class UserData {\r\n    constructor(data: firebase.auth.UserCredential) {\r\n        const profile = data.additionalUserInfo!!.profile;\r\n        const userId = data[\"user\"]!!.uid;\r\n        this.user = {\r\n            id: userId,\r\n            // @ts-ignore\r\n            email: profile[\"email\"],\r\n            // @ts-ignore\r\n            firstName: profile[\"given_name\"],\r\n            // @ts-ignore\r\n            lastName: profile[\"family_name\"],\r\n            // @ts-ignore\r\n            avatarUrl: profile[\"picture\"]\r\n        }\r\n    }\r\n    user: ProfileData;\r\n}\r\n","import {AnswerResearchPayloadProps, ReduxAction} from \"./reducer\";\r\nimport {ActionsTypes} from \"./ActionTypes\";\r\nimport {UserData} from \"../utils/Data/UserData\";\r\nimport {Research} from \"../utils/Data/ResearchData\";\r\nimport {AnswerData} from \"../utils/Data/AnswerData\";\r\n\r\n\r\nexport const saveAuthenticatedUser = (userInfo: UserData): ReduxAction => {\r\n    return {payload: userInfo, type: ActionsTypes.SAVE_AUTHENTICATED_USER};\r\n}\r\n\r\nexport const clearAuthenticatedUser = (): ReduxAction => {\r\n    return {type: ActionsTypes.CLEAR_SAVED_USER};\r\n}\r\n\r\nexport const saveResearchs = (researchs: {id: string, research: Research}[]): ReduxAction => {\r\n    return {payload: researchs, type: ActionsTypes.SAVE_RESEARCHS};\r\n}\r\n\r\nexport const saveResearch = (research: Research): ReduxAction => {\r\n    return {payload: research, type: ActionsTypes.SAVE_RESEARCH};\r\n}\r\n\r\nexport const saveAnswerResearchPayload = (researchPayload: AnswerResearchPayloadProps): ReduxAction => {\r\n    return {payload: researchPayload, type: ActionsTypes.SAVE_ANSWER_RESEARCH_PAYLOAD};\r\n}\r\n\r\nexport const saveAnswersOfResearch = (answersResearch: {researchId: string, answers: AnswerData[]}): ReduxAction => {\r\n    return {payload: answersResearch, type: ActionsTypes.SAVE_ANSWERS_OF_RESEARCH }\r\n}\r\n","import firebase from \"firebase\";\r\nimport {RepositoryResponse, returnRepositoryResponse} from \"./Helpers\";\r\nimport {store} from \"../../redux/ConfigureStore\";\r\nimport {ReduxAction, ReduxState} from \"../../redux/reducer\";\r\nimport { PersistPartial } from \"redux-persist/lib/persistReducer\";\r\nimport { Store } from \"redux\";\r\nimport {UserData} from \"../Data/UserData\";\r\nimport {clearAuthenticatedUser, saveAuthenticatedUser} from \"../../redux/Actions\";\r\n\r\nexport class GoogleAuth {\r\n    constructor() {\r\n        firebase.auth().languageCode = 'pt';\r\n        this.provider = new firebase.auth.GoogleAuthProvider();\r\n        this.store = store;\r\n    }\r\n    provider: firebase.auth.GoogleAuthProvider;\r\n    store: Store<ReduxState & PersistPartial, ReduxAction>;\r\n\r\n    // @ts-ignore\r\n    async doLogin(): Promise<RepositoryResponse> {\r\n        try {\r\n            const response = await firebase.auth().signInWithPopup(this.provider);\r\n            const userData = new UserData(response);\r\n            this.store.dispatch(saveAuthenticatedUser(userData))\r\n            returnRepositoryResponse(true, null);\r\n        } catch (e) {\r\n            console.log(\"error => \", e);\r\n            returnRepositoryResponse(false, e);\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    async doLogout(): Promise<RepositoryResponse> {\r\n        try {\r\n            const response = await firebase.auth().signOut();\r\n            this.store.dispatch(clearAuthenticatedUser());\r\n            returnRepositoryResponse(true, null);\r\n        } catch (e) {\r\n            /* TODO - Print message Error */\r\n            console.log(e);\r\n            returnRepositoryResponse(false, e);\r\n        }\r\n    }\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport \"./LoginScreen.css\"\r\nimport BackgroundLogin from \"../../resources/LoginBackground.jpg\"\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Grid, Card} from \"@material-ui/core\";\r\nimport GoogleButton from 'react-google-button'\r\nimport {useDimensions} from \"../../utils/Hooks/Hooks\";\r\nimport {GoogleAuth} from \"../../utils/Services/GoogleAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const LoginScreen = () => {\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const styles = useStyles();\r\n    const dimensions = useDimensions();\r\n    const history = useHistory();\r\n    const authGoogle = new GoogleAuth();\r\n\r\n    const _handleLogin = async () => {\r\n       await authGoogle.doLogin();\r\n       history.push(\"/\");\r\n    }\r\n\r\n    const _renderMainContent = () => {\r\n        return (\r\n            <Card  className={styles.card} elevation={5}>\r\n                <GoogleButton onClick={_handleLogin}/>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    const _renderLoading = () => {\r\n        return (\r\n            <div/>\r\n        )\r\n    }\r\n\r\n    const _renderContent = () => {\r\n        if (isLoading) {\r\n            return _renderLoading();\r\n        } else {\r\n            return _renderMainContent()\r\n        }\r\n    }\r\n\r\n    /* ANIMATE LOADING */\r\n    return (\r\n        <div className={styles.backgroundImage} style={{height: dimensions.height, width: dimensions.width}} >\r\n            <Grid className={styles.gridContainer} container>\r\n                <Grid className={styles.gridItem} item>\r\n                    {_renderContent()}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    backgroundImage: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: `url(${BackgroundLogin})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n    },\r\n    gridContainer: {height: \"50%\", width: \"30%\"},\r\n    gridItem: {height: '100%', width: '100%'},\r\n    card: {height: '100%', width: '100%', display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}\r\n})\r\n\r\n\r\n","import {useEffect, useState} from \"react\";\r\n\r\nexport const useDimensions = () => {\r\n    const [dimensions, setDimensions] = useState({width: window.innerWidth, height: window.innerHeight});\r\n    useEffect(() => {\r\n        const updateDimensions = () => {\r\n            setDimensions({width: window.innerWidth, height: window.innerHeight});\r\n        }\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateDimensions);\r\n        }\r\n    }, [dimensions]);\r\n    return dimensions;\r\n}\r\n","import {Link, useRouteMatch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReduxState} from \"../../redux/reducer\";\r\nimport {AppBar, Toolbar, Typography, Popover} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport React, {useState} from \"react\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport \"./AppToolbar.css\"\r\nimport {GoogleAuth} from \"../../utils/Services/GoogleAuth\";\r\n\r\nconst AppPopOver = ({id, open, anchorElement, handleClose, children}: {id: string | undefined, open: boolean, anchorElement: any, handleClose: () => void, children: any}) => {\r\n    return (\r\n        <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorElement}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n        >\r\n            {children}\r\n        </Popover>\r\n    )\r\n}\r\n\r\nexport const AppToolbar = () => {\r\n    const googleAuth = new GoogleAuth();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    let {url} = useRouteMatch();\r\n    const user = useSelector((state: ReduxState) => state.user);\r\n    const _renderUserInfo = () => {\r\n        return (\r\n            <div className={\"userInfo\"}>\r\n                <Grid className={\"userInfoGridContainer\"} container>\r\n                    <Grid className={\"userInfoGridItem\"} item onClick={handleClick}>\r\n                        <Paper className={\"userInfoPaperContainer\"}>\r\n                            <div className={\"userAvatar\"}>\r\n                                <Avatar src={user != null ? user?.user.avatarUrl : \"\"}/>\r\n                            </div>\r\n                            <div className={\"userName\"}>\r\n                                Reberth {/*TODO - Get authenticated user*/}\r\n                            </div>\r\n                            <div className={\"arrowBot\"}>\r\n                                <ArrowDropDownIcon/>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const _renderRegisterNewResearch = () => {\r\n        return (\r\n          <div className={\"registerNewResearchDiv\"}>\r\n              <Link className={\"link\"} to={`${url}/register-research`}>\r\n                  <div className={\"registerNewResearchText\"} >\r\n                      Registrar nova pesquisa {/*TODO - i18n*/}\r\n                  </div>\r\n              </Link>\r\n          </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={\"toolbar\"}>\r\n                    <Link to={url} className={\"link\"}>\r\n                        <Typography variant=\"h6\">\r\n                            Home {/*TODO - i18n*/}\r\n                        </Typography>\r\n                    </Link>\r\n                    <div className={\"rightToolbarOptions\"}>\r\n                        {_renderRegisterNewResearch()}\r\n                        {_renderUserInfo()}\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppPopOver anchorElement={anchorEl} handleClose={handleClose} id={id} open={open}>\r\n                <div className={\"popOver\"}>\r\n                    <div className={\"signOut\"} onClick={() => googleAuth.doLogout()}>\r\n                        <ExitToAppIcon/>\r\n                        <Typography>\r\n                            Sign Out {/*TODO - i18n*/}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </AppPopOver>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./SelectResearch.css\"\r\n\r\nexport const SelectResearch = () => {\r\n    /* Create carroussel to questions */\r\n    /* Like: step 1, step 2, step 3*/\r\n    return (\r\n        <div className={\"root\"}>\r\n            Por favor selecione uma pesquisa {/*TODO - i18n*/}\r\n        </div>\r\n    )\r\n}\r\n","import {Grid} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./OverviewPaper.css\"\r\nexport const OverviewPaper = ({children}: {children: any}) => {\r\n    return (\r\n        <Grid item className={\"gridItemContainer\"}>\r\n            <div className={\"gridItem\"}>\r\n                {children}\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n","export const List = ({data, renderItem}: {data: any, renderItem: (item: any) => any}) => {\r\n    const _renderList = () => {\r\n        return data.map((item: any) => renderItem(item));\r\n    }\r\n    return _renderList();\r\n}\r\n","import {OverviewPaper} from \"../Overview/OverviewPaper\";\r\nimport {List} from \"../List/List\";\r\nimport React from \"react\";\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport \"./ResearchList.css\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReduxState} from \"../../redux/reducer\";\r\nimport {Research} from \"../../utils/Data/ResearchData\";\r\n\r\nexport const ResearchList = () => {\r\n    let { url } = useRouteMatch();\r\n    const _renderItem = (item: {id: string, research: Research}) => {\r\n        return (\r\n            <Link className={\"linkContainer\"} to={`${url}/research/${item.id}`}>\r\n                <div className={\"rootContainerOfTheList\"}>\r\n                    <div className={\"mainContainerOfTheItem\"}>\r\n                        {item.research.title}\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        )\r\n    }\r\n    const researchData = useSelector((state: ReduxState) => state.researchs);\r\n\r\n    return (\r\n        <div className={\"mainGridContainer\"}>\r\n            <OverviewPaper>\r\n                <List data={researchData} renderItem={_renderItem}/>\r\n            </OverviewPaper>\r\n        </div>\r\n    )\r\n}\r\n","import firebase from \"firebase\";\r\n\r\nexport class ResearchQuestionData {\r\n    constructor(id: string | null = null,\r\n                question: string | null = null,\r\n                options: Map<number, string> | null = null,\r\n                selectedOption: number | null = null) {\r\n        this.id = id;\r\n        this.question = question;\r\n        this.options = options;\r\n        this.selectedOption = selectedOption;\r\n    }\r\n    id: string | null;\r\n    question: string | null;\r\n    options: Map<number, string> | null;\r\n    selectedOption: number | null;\r\n\r\n    static from(data:  firebase.firestore.DocumentData): ResearchQuestionData {\r\n        return new ResearchQuestionData(\r\n            data[\"id\"],\r\n            data[\"question\"],\r\n            data[\"options\"],\r\n            data[\"selectedOption\"]\r\n        );\r\n    }\r\n\r\n    parseFirebase() {\r\n        const newOptions: any = [];\r\n        this.options?.forEach((value, key) => newOptions.push({[key]: value}))\r\n        return {\r\n            \"id\": this.id,\r\n            \"question\": this.question,\r\n            \"options\": newOptions,\r\n            \"selectedOption\": this.selectedOption\r\n        }\r\n    }\r\n}\r\n","import {ResearchQuestionData} from \"./ResearchQuestionData\";\r\nimport {ResearchStatus, StatusTypes} from \"./ResearchStatus\";\r\nimport firebase from \"firebase\";\r\nimport { store } from \"../../redux/ConfigureStore\";\r\n\r\nexport class Research {\r\n    constructor(\r\n        title: string | null = null,\r\n        subtitle: string | null = null,\r\n        description: string | null = null,\r\n        questions: ResearchQuestionData[] = [new ResearchQuestionData()],\r\n        status: ResearchStatus | null = null,\r\n        roles: Map<string, string> | null = null,\r\n        ) {\r\n\r\n        this.title = title;\r\n        this.subtitle = subtitle;\r\n        this.description = description;\r\n        this.questions = questions;\r\n        this.status = status;\r\n        this.roles = roles;\r\n    }\r\n\r\n    title: string | null;\r\n    subtitle: string | null;\r\n    description: string | null;\r\n    questions: ResearchQuestionData[];\r\n    status: ResearchStatus | null;\r\n    roles: Map<string, string> | null\r\n\r\n    static from(data:  firebase.firestore.DocumentData): Research {\r\n        const questions  = data[\"questions\"]\r\n            .map((data: firebase.firestore.DocumentData) => ResearchQuestionData.from(data));\r\n        const status = data[\"status\"] != null ? ResearchStatus[(data[\"status\"]).toUpperCase() as StatusTypes] : null\r\n        return new Research(\r\n            data[\"title\"],\r\n            data[\"subtitle\"],\r\n            data[\"description\"],\r\n            questions,\r\n            status,\r\n            data[\"roles\"]\r\n        )\r\n    }\r\n\r\n    parseFirebase() {\r\n        let roles: any = {}\r\n        this.roles?.forEach((value, index) => roles = {...roles, [index]: value});\r\n        return {\r\n            \"title\": this.title,\r\n            \"subtitle\": this.subtitle,\r\n            \"description\": this.description,\r\n            \"questions\": this.questions.map((question) => question.parseFirebase()),\r\n            \"status\": this.status?.toUpperCase(),\r\n            \"roles\": roles\r\n        }\r\n    }\r\n\r\n}\r\n","import firebase from \"firebase\";\r\nimport {Research} from \"../../Data/ResearchData\";\r\nimport {ReduxAction, ReduxState} from \"../../../redux/reducer\";\r\nimport {PersistPartial} from \"redux-persist/lib/persistReducer\";\r\nimport {Store} from \"redux\";\r\nimport {store} from \"../../../redux/ConfigureStore\";\r\nimport {saveAnswerResearchPayload, saveResearch, saveResearchs} from \"../../../redux/Actions\";\r\nimport {AnswerData} from \"../../Data/AnswerData\";\r\n\r\ninterface FirestoreManagerResponse {\r\n    result: boolean,\r\n    error: string | null\r\n}\r\n\r\nexport class FirestoreManager {\r\n    static COLLECTIONS = {\r\n        RESEARCH: \"researchs\",\r\n        ANSWERED_QUESTIONS: \"answeredQuestions\"\r\n    }\r\n    private TAG = \"[FIRESTOREMANAGER]\";\r\n\r\n    constructor() {\r\n        this.firestore = firebase.firestore();\r\n        this.store = store;\r\n    }\r\n\r\n    private firestore: firebase.firestore.Firestore\r\n    private store: Store<ReduxState & PersistPartial, ReduxAction>\r\n\r\n    /*TODO - UPDATE THIS TO CHOOSE COLLECTION*/\r\n    async read(): Promise<FirestoreManagerResponse> {\r\n        try {\r\n            const user = this.store.getState().user;\r\n            const researchs = (await this.firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .where(`roles.${user?.user.id}`, \"==\", \"owner\")\r\n                .get())\r\n                .docs\r\n                .map((doc) => {\r\n\r\n                    return {\r\n                        id: doc.id,\r\n                        research: Research.from(doc.data())\r\n                    }\r\n                });\r\n\r\n            this.store.dispatch(saveResearchs(researchs));\r\n            return {result: true, error: null}\r\n        } catch (e) {\r\n            console.log(\"error => \", e);\r\n            /* TODO - SHOW ERROR */\r\n            return {result: false, error: e.message};\r\n        }\r\n    }\r\n\r\n    async write(research: Research): Promise<FirestoreManagerResponse> {\r\n        /* TODO - Look ways to block updated from here */\r\n        try {\r\n            const researchSaved = await this.firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .add(research.parseFirebase())\r\n\r\n            this.store.dispatch(saveAnswerResearchPayload({\r\n                answerResearchId: \"\",\r\n                researchId: researchSaved.id\r\n            }));\r\n\r\n            console.log(this.TAG, \"Successful saved research!\");\r\n            return {result: true, error: null};\r\n        } catch (e) {\r\n            /* TODO - SHOW ERROR */\r\n            return {result: false, error: e.message};\r\n        }\r\n    }\r\n\r\n    async update(research: Research, researchId: string): Promise<FirestoreManagerResponse> {\r\n        try {\r\n            await this.firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .doc(researchId)\r\n                .update(research.parseFirebase());\r\n            console.log(this.TAG, \"Updated research\")\r\n            return {result: true, error: null};\r\n        } catch (e) {\r\n            console.log(this.TAG, \"[FIRESTOREMANAGER] error => \", e);\r\n            /* TODO - SHOW ERROR */\r\n            return {result: false, error: e.message};\r\n        }\r\n    }\r\n\r\n    async delete(research: Research, researchId: string): Promise<FirestoreManagerResponse> {\r\n        try {\r\n            await this.firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .doc(researchId)\r\n                .delete();\r\n            console.log(this.TAG, \"Document removed! \");\r\n            return {result: true, error: null};\r\n        } catch (e) {\r\n            console.log(this.TAG, \"Error => \", e);\r\n            /* TODO - SHOW ERROR */\r\n            return {result: false, error: e.message};\r\n        }\r\n    }\r\n\r\n    async find(researchId: string): Promise<FirestoreManagerResponse> {\r\n        try {\r\n            const research = await this\r\n                .firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .doc(researchId)\r\n                .get()\r\n            if (research === undefined) {\r\n                return {result: false, error: \"Research not found\"};\r\n            } else {\r\n                this.store.dispatch(saveResearch(Research.from(research.data()!!)))\r\n                return {result: true, error: null};\r\n            }\r\n        } catch (e) {\r\n            console.log(this.TAG, e.message);\r\n            return {result: false, error: e.message};\r\n        }\r\n    }\r\n\r\n}\r\n","export enum STEPS {\r\n    ONE,\r\n    TWO,\r\n    THREE,\r\n}\r\n","import React, {useState} from \"react\";\r\nimport \"./NewOption.css\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\ninterface NewOptionProps {\r\n    onDeleteOption: () => void,\r\n    onUpdateValue: (option: string) => void,\r\n    value: string | null,\r\n}\r\nexport const NewOption = ({onDeleteOption, onUpdateValue, value = null, }: NewOptionProps) => {\r\n    const [disabled, setDisabled] = useState(value != null);\r\n    const [error, setError] = useState(false);\r\n    const [optionValue, setOption] = useState<string>(value != null ? value : \"\");\r\n    const _fieldAreInvalid = (value: string) => {\r\n        if (value === \"\" || value == null) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const _handleKey = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === \"Enter\") {\r\n            if (_fieldAreInvalid(event.currentTarget.value)) {\r\n                setError(true);\r\n                return;\r\n            } else {\r\n                setOption(event.currentTarget.value);\r\n                setDisabled(!disabled);\r\n                onUpdateValue(optionValue!!);\r\n            }\r\n        }\r\n    }\r\n\r\n    const _renderErrorMessage = () => {\r\n        if (error) {\r\n            return (\"O campo deve estar preenchido\"); {/*TODO - i18n*/}\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    const _deleteOption = () => {\r\n        onDeleteOption();\r\n    }\r\n\r\n    const _renderOptionField = () => {\r\n        if (disabled) {\r\n            return <div className={\"optionQuestionDisabledDiv\"}>\r\n                <div className={\"optionQuestionDisabled\"} onClick={() => {\r\n                    setDisabled(!disabled);\r\n                }}>\r\n                    {optionValue}\r\n                </div>\r\n                <div className={\"deleteOptionButton\"}>\r\n                    {/*TODO - i18n*/}\r\n                    <Tooltip title={\"Deletar esta opção\"}>\r\n                        <IconButton>\r\n                            <DeleteIcon onClick={_deleteOption}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return (\r\n                <div className={\"optionQuestionEnabledContainer\"}>\r\n                    <input\r\n                        type={\"text\"}\r\n                        defaultValue={optionValue}\r\n                        className={\"optionQuestionEnabled\"}\r\n                        autoFocus={true}\r\n                        onKeyDown={_handleKey}\r\n                        onChange={(event) => setOption(event.target.value)}\r\n                        placeholder={\"Digite aqui uma possivel resposta\"}\r\n                        onBlur={() => setError(false)}\r\n                    />{/*TODO - i18n*/}\r\n                    <span className={\"spanError\"}>\r\n                        {_renderErrorMessage()}\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"optionQuestionDiv\"} >\r\n            {_renderOptionField()}\r\n        </div>\r\n        )\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport \"./StepTwo.css\"\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {NewOption} from \"../NewOption/NewOption\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\n\r\ninterface StepTwoProps {\r\n    error: boolean,\r\n    onGetQuestions: (questions: QuestionsState[] | null) => void,\r\n    savedQuestions: QuestionsState[] | null\r\n}\r\n\r\nexport interface OptionState {index: number, payload: string | null}\r\nexport interface QuestionsState {\r\n    index: number,\r\n    question: string | null,\r\n    options: OptionState[]\r\n}\r\nconst generateInitialOptions = () => Array.from({length: 4}, (_, index) => ({index, payload: null}));\r\n\r\nconst initialQuestionsState = [\r\n    {index: 0, question: null, options: generateInitialOptions()}\r\n]\r\n\r\n/* Considerações:\r\n*\r\n*   As questões que estão sendo passadas para o StepTwo podem ser armazenadas no redux\r\n*   Possivelmente muitos métodos aqui podem virar hooks\r\n*\r\n* */\r\n\r\n\r\nexport const StepTwo = ({error, onGetQuestions, savedQuestions}: StepTwoProps) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [questions, setQuestions] = useState<QuestionsState[]>(savedQuestions ?? initialQuestionsState);\r\n\r\n    const textFieldRef = useRef(null);\r\n    const _goBackButtonIsDisabled = (): boolean => {\r\n        if (currentQuestion === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const _goBackToPreviousQuestion = () => {\r\n        setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n\r\n    const _renderGoBackToPreviousQuestionButton = () => {\r\n        return (\r\n            <div>\r\n                <IconButton aria-label=\"goBack\"  onClick={_goBackToPreviousQuestion} disabled={_goBackButtonIsDisabled()}>\r\n                    <ChevronLeftIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const _renderErrorSpanByEmptyField = (message: string, field: string | null) => {\r\n        if (error && (field == null || field === \"\")) {\r\n            return (\r\n                <div className={\"spanErrorDiv\"}>\r\n                    <span className={\"spanError\"}>\r\n                        Erro: O campo referente a {message} deve estar preenchido! {/*TODO - i18n*/}\r\n                    </span>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div/>\r\n            )\r\n        }\r\n    }\r\n\r\n    const _deleteButtonIsDisabled = (): boolean => {\r\n        if (questions.length === 1 || currentQuestion === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const _removeQuestion = (cQuestion: number) => {\r\n        if (cQuestion !== 0) {\r\n            questions.splice(cQuestion, 1);\r\n            setCurrentQuestion(cQuestion-1);\r\n            setQuestions(questions);\r\n        }\r\n    }\r\n\r\n    const _renderDeleteQuestionButton = () => {\r\n        return (\r\n            <div>\r\n                <IconButton\r\n                    aria-label={\"delete\"}\r\n                    onClick={() => _removeQuestion(currentQuestion)}\r\n                    disabled={_deleteButtonIsDisabled()}>\r\n                    <DeleteIcon fontSize={\"default\"}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const _registerNewQuestionIsDisabled = (): boolean => {\r\n        /* TODO - Add a limit to new questions.\r\n        *   Freemium users => max 3 questions\r\n        *   Premium users => unlimited questions\r\n        * */\r\n        return false;\r\n    }\r\n\r\n    const _updateOptionValue = (questionIndex: number, value: string, index: number) => {\r\n        questions[questionIndex].options[index].payload = value;\r\n        setQuestions(questions);\r\n    }\r\n\r\n    const _deleteOption = (currentQuestion: number, currentOption: number) => {\r\n        const newQuestions = [...questions];\r\n        const question = newQuestions.splice(currentQuestion, 1);\r\n        question[0].options.splice(currentOption, 1);\r\n        setQuestions([...newQuestions, question[0]]);\r\n    }\r\n\r\n    const _renderOptions = (currentQuestion: number) => {\r\n        const question = questions[currentQuestion];\r\n        return (\r\n            <div className={\"questionOptionsDiv\"}>\r\n                <Scrollbar className={\"scrollBar\"}>\r\n                    {question.options.map((option, index) =>\r\n                        <div>\r\n                            <NewOption\r\n                                key={`question-${currentQuestion}-option-${option.index}`}\r\n                                value={questions[currentQuestion].options[index].payload}\r\n                                onDeleteOption={() => _deleteOption(currentQuestion, index)}\r\n                                onUpdateValue={(value) => _updateOptionValue(currentQuestion, value, index)}/>\r\n                            {_renderErrorSpanByEmptyField(\"opção\", questions[currentQuestion].options[index].payload)}\r\n                        </div>)}\r\n                </Scrollbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const _addNewOption = (question: QuestionsState) => {\r\n        const lastQuestion = question.options.reduce((optionA, optionB) => optionA.index > optionB.index ? optionA : optionB);\r\n        const newQuestionState: QuestionsState[] = questions.filter((question) => question.index !== currentQuestion);\r\n        const newOption = {index: lastQuestion.index + 1, payload: null};\r\n        setQuestions([...newQuestionState, {...question, options: [...question.options, newOption]}]);\r\n    }\r\n\r\n    const _renderAddNewOption = (currentQuestion: number) => {\r\n        const question: QuestionsState = questions[currentQuestion];\r\n        return (\r\n            <div className={\"addNewOptionDiv\"}>\r\n                <div className={\"addNewOption\"} onClick={() => _addNewOption(question)}>\r\n                    <AddCircleOutlineIcon/>\r\n                    Nova opção {/*TODO - i18n*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const _renderNewQuestionContent = () => {\r\n        return (\r\n            <div className={\"questionDiv\"}>\r\n                <div className={\"questionDetailDiv\"}>\r\n                    <div className={\"questionNumber\"}>\r\n                        Questão {currentQuestion+1} {/*TODO - i18n*/}\r\n                    </div>\r\n                    <div className={\"questionTitle\"}>\r\n                        <TextField\r\n                            fullWidth\r\n                            inputRef={textFieldRef}\r\n                            defaultValue={questions[currentQuestion].question}\r\n                            onChange={(event) => questions[currentQuestion].question = event.target.value}\r\n                            label={\"Qual a pergunta?\"}  />\r\n                        {_renderErrorSpanByEmptyField(\"pergunta\", questions[currentQuestion].question)}\r\n                    </div>\r\n                    <div className={\"questionOptions\"}>\r\n                        {_renderOptions(currentQuestion)}\r\n                        <div>\r\n                            {_renderAddNewOption(currentQuestion)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const _renderNextQuestionButton = () => {\r\n        return (\r\n            <div>\r\n                <IconButton aria-label={\"next\"} onClick={_showNextQuestion} disabled={_nextButtonIsDisabled()} >\r\n                    <ChevronRightIcon fontSize={\"large\"}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const _showNextQuestion = () => {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n\r\n    const _nextButtonIsDisabled = (): boolean => {\r\n        if (currentQuestion === (questions.length-1)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const _generateNewQuestion = () => {\r\n        // @ts-ignore\r\n        textFieldRef.current != null && (textFieldRef.current!!.value = null);\r\n        setCurrentQuestion(questions.length);\r\n        setQuestions([...questions,\r\n            {\r\n                index:questions.length,\r\n                question: \"\",\r\n                options: generateInitialOptions()\r\n            }\r\n        ]);\r\n    }\r\n\r\n    const _renderNewQuestion = () => {\r\n        return (\r\n            <div>\r\n                {/*I18N*/}\r\n                <Tooltip title={\"Nova questão\"}>\r\n                    <IconButton\r\n                        aria-label={\"newQuestions\"}\r\n                        onClick={_generateNewQuestion}\r\n                        disabled={_registerNewQuestionIsDisabled()}\r\n                    >\r\n                        <PostAddIcon fontSize={\"default\"}/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        onGetQuestions(questions);\r\n    }, [onGetQuestions, questions])\r\n    return (\r\n        <div className={\"stepTwoDiv\"}>\r\n            <div className={\"columnOptions\"}>\r\n                {_renderGoBackToPreviousQuestionButton()}\r\n                {_renderDeleteQuestionButton()}\r\n            </div>\r\n            <div className={\"contentDiv\"}>\r\n                {_renderNewQuestionContent()}\r\n            </div>\r\n            <div className={\"columnOptions\"}>\r\n                {_renderNextQuestionButton()}\r\n                {_renderNewQuestion()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nStepTwo.defaultProps = {\r\n    savedQuestions: null,\r\n    error: false,\r\n    onGetQuestions: () => null\r\n}\r\n","import React from \"react\"\r\nimport \"./SocialMediaIcons.css\"\r\n\r\nexport const FacebookIcon = () => {\r\n    return (\r\n        <div className={\"cursor\"}>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 1365.3333 1365.3333\"\r\n                height={64}\r\n                width={64}\r\n                id=\"svg2\"\r\n                version=\"1.1\">\r\n                <defs\r\n                    id=\"defs6\"/>\r\n                <g\r\n                    transform=\"matrix(1.3333333,0,0,-1.3333333,0,1365.3333)\"\r\n                    id=\"g10\">\r\n                    <g\r\n                        transform=\"scale(0.1)\"\r\n                        id=\"g12\">\r\n                        <path\r\n                            id=\"path14\"\r\n                            style={{fill:\"#1877f2\", fillOpacity:1, fillRule:\"nonzero\", stroke:\"none\"}}\r\n                            d=\"m 10240,5120 c 0,2827.7 -2292.3,5120 -5120,5120 C 2292.3,10240 0,7947.7 0,5120 0,2564.46 1872.31,446.301 4320,62.1992 V 3640 H 3020 v 1480 h 1300 v 1128 c 0,1283.2 764.38,1992 1933.9,1992 560.17,0 1146.1,-100 1146.1,-100 V 6880 H 6754.38 C 6118.35,6880 5920,6485.33 5920,6080.43 V 5120 H 7340 L 7113,3640 H 5920 V 62.1992 C 8367.69,446.301 10240,2564.46 10240,5120\"/>\r\n                        <path\r\n                            id=\"path16\"\r\n                            style={{fill:\"#ffffff\", fillOpacity:1, fillRule:\"nonzero\", stroke: \"none\"}}\r\n                            d=\"m 7113,3640 227,1480 H 5920 v 960.43 c 0,404.9 198.35,799.57 834.38,799.57 H 7400 v 1260 c 0,0 -585.93,100 -1146.1,100 C 5084.38,8240 4320,7531.2 4320,6248 V 5120 H 3020 V 3640 H 4320 V 62.1992 C 4580.67,21.3008 4847.84,0 5120,0 c 272.16,0 539.33,21.3008 800,62.1992 V 3640 h 1193\"/>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport \"./SocialMediaIcons.css\"\r\n\r\nexport const LinkedinIcon = () => {\r\n    return (\r\n        <div className={\"cursor\"}>\r\n            <svg width=\"64px\" height=\"64px\"\r\n                 viewBox=\"0 0 72 72\" version=\"1.1\"><title>linkedin</title>\r\n                <g id=\"providers-list\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n                    <g id=\"linkedin\">\r\n                        <rect id=\"Rectangle-2\" fill=\"#117EB8\" x=\"0\" y=\"0\" width=\"72\" height=\"72\" rx=\"4\"/>\r\n                        <path\r\n                            d=\"M13.139 27.848h9.623V58.81h-9.623V27.848zm4.813-15.391c3.077 0 5.577 2.5 5.577 5.577 0 3.08-2.5 5.581-5.577 5.581a5.58 5.58 0 1 1 0-11.158zm10.846 15.39h9.23v4.231h.128c1.285-2.434 4.424-5 9.105-5 9.744 0 11.544 6.413 11.544 14.75V58.81h-9.617V43.753c0-3.59-.066-8.209-5-8.209-5.007 0-5.776 3.911-5.776 7.95V58.81h-9.615V27.848z\"\r\n                            id=\"Shape\" fill=\"#FFF\"/>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport \"./SocialMediaIcons.css\"\r\n\r\nexport const TelegramIcon = () => {\r\n    return (\r\n        <div className={\"cursor\"}>\r\n            <svg\r\n                height={64} width={64}\r\n                viewBox=\"0 0 240 240\">\r\n                <defs>\r\n                    <linearGradient id=\"a\" x1=\".667\" x2=\".417\" y1=\".167\" y2=\".75\">\r\n                        <stop offset=\"0\" stop-color=\"#37aee2\"/>\r\n                        <stop offset=\"1\" stop-color=\"#1e96c8\"/>\r\n                    </linearGradient>\r\n                    <linearGradient id=\"b\" x1=\".66\" x2=\".851\" y1=\".437\" y2=\".802\">\r\n                        <stop offset=\"0\" stop-color=\"#eff7fc\"/>\r\n                        <stop offset=\"1\" stop-color=\"#fff\"/>\r\n                    </linearGradient>\r\n                </defs>\r\n                <circle cx=\"120\" cy=\"120\" r=\"120\" fill=\"url(#a)\"/>\r\n                <path fill=\"#c8daea\" d=\"M98 175c-3.888 0-3.227-1.468-4.568-5.17L82 132.207 170 80\"/>\r\n                <path fill=\"#a9c9dd\" d=\"M98 175c3 0 4.325-1.372 6-3l16-15.558-19.958-12.035\"/>\r\n                <path fill=\"url(#b)\"\r\n                      d=\"M100.04 144.41l48.36 35.729c5.519 3.045 9.501 1.468 10.876-5.123l19.685-92.763c2.015-8.08-3.08-11.746-8.36-9.349l-115.59 44.571c-7.89 3.165-7.843 7.567-1.438 9.528l29.663 9.259 68.673-43.325c3.242-1.966 6.218-.91 3.776 1.258\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport \"./SocialMediaIcons.css\"\r\n\r\nexport const WhatsappIcon = () => {\r\n    return (\r\n        <div className={\"cursor\"}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                 fill=\"#fff\"\r\n                 height={64} width={64}\r\n                 aria-label=\"WhatsApp\"\r\n                 viewBox=\"0 0 512 512\">\r\n                <rect width=\"512\" height=\"512\" fill=\"#45d354\" rx=\"15%\"/>\r\n                <path\r\n                    d=\"M308 273c-3-2-6-3-9 1l-12 16c-3 2-5 3-9 1-15-8-36-17-54-47-1-4 1-6 3-8l9-14c2-2 1-4 0-6l-12-29c-3-8-6-7-9-7h-8c-2 0-6 1-10 5-22 22-13 53 3 73 3 4 23 40 66 59 32 14 39 12 48 10 11-1 22-10 27-19 1-3 6-16 2-18\"/>\r\n                <path\r\n                    d=\"M264 384c-41 0-72-22-72-22l-49 13 12-48s-20-31-20-70c0-72 59-132 132-132 68 0 126 53 126 127 0 72-58 131-129 132m-159 29l83-23a158 158 0 0 0 230-140c0-86-68-155-154-155a158 158 0 0 0-137 236\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import {DiscordIcon} from \"../../resources/Icons/DiscordIcon\";\r\nimport {FacebookIcon} from \"../../resources/Icons/FacebookIcon\";\r\nimport {GmailIcon} from \"../../resources/Icons/GmailIcon\";\r\nimport {InstagramIcon} from \"../../resources/Icons/InstagramIcon\";\r\nimport {LinkedinIcon} from \"../../resources/Icons/LinkedinIcon\";\r\nimport {MessengerIcon} from \"../../resources/Icons/MessengerIcon\";\r\nimport {OutlookIcon} from \"../../resources/Icons/OutlookIcon\";\r\nimport {SlackIcon} from \"../../resources/Icons/SlackIcon\";\r\nimport {TelegramIcon} from \"../../resources/Icons/TelegramIcon\";\r\nimport {WhatsappIcon} from \"../../resources/Icons/WhatsAppIcon\";\r\nimport \"./ShareSocialMedia.css\";\r\nimport React from \"react\";\r\nimport {FacebookShareButton, FacebookMessengerShareButton, LinkedinShareButton, TelegramShareButton, WhatsappShareButton} from \"react-share\";\r\n\r\nexport interface ShareSocialMediaProps {\r\n    url: string,\r\n    message: string | null\r\n}\r\nexport const ShareSocialMedia = ({url, message}: ShareSocialMediaProps ) => {\r\n    return (\r\n        <div className={\"shareOptionsContainer\"}>\r\n            <div className={\"socialMedia\"}>\r\n                {/*<DiscordIcon onClick={() => null}/>*/}\r\n                <FacebookShareButton url={url}>\r\n                    <FacebookIcon/>\r\n                </FacebookShareButton>\r\n                <LinkedinShareButton url={url}>\r\n                    <LinkedinIcon/>\r\n                </LinkedinShareButton>\r\n                {/*<GmailIcon onClick={() => null}/>*/}\r\n                {/*<InstagramIcon onClick={() => null} />*/}\r\n            </div>\r\n            <div className={\"socialMedia\"}>\r\n                {/*<MessengerIcon onClick={() => null}/>*/}\r\n                {/*<OutlookIcon onClick={() => null}/>*/}\r\n                {/*<SlackIcon onClick={() => null}/>*/}\r\n                <TelegramShareButton url={url}>\r\n                    <TelegramIcon />\r\n                </TelegramShareButton>\r\n                <WhatsappShareButton url={url}>\r\n                    <WhatsappIcon />\r\n                </WhatsappShareButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nShareSocialMedia.defaultProps = {\r\n    message: null\r\n}\r\n","import {getStore} from \"../../../redux/ConfigureStore\";\r\nimport { Store } from \"redux\";\r\nimport { ReduxState, ReduxAction } from \"../../../redux/reducer\";\r\nimport { PersistPartial } from \"redux-persist/lib/persistReducer\";\r\n\r\nexport class ShareManager {\r\n    constructor() {\r\n        this.store = getStore();\r\n    }\r\n\r\n    store: Store<ReduxState & PersistPartial, ReduxAction>;\r\n    static shareResearch(researchId: string | null) {\r\n        return `${window.location.host}/researchs/${researchId}`;\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport \"./ShareResearch.css\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport {ShareSocialMedia} from \"../ShareSocialMedia/ShareSocialMedia\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReduxState} from \"../../redux/reducer\";\r\nimport {ShareManager} from \"../../utils/Services/ShareManager/ShareManager\";\r\n\r\nexport const ShareResearch = () => {\r\n    /*\r\n    * TODO - Generate deep links\r\n    *  */\r\n\r\n    const researchId = useSelector((state: ReduxState) => state.answerResearchPayload?.researchId || null);\r\n\r\n    return (\r\n        <div className={\"shareResearchContainer\"}>\r\n            <div className={\"shareMessageContainer\"}>\r\n               <div className={\"shareMessageText\"}>\r\n                   Digite uma mensagem para ser compartilhada junto ao link {/*TODO - i18n*/}\r\n               </div>\r\n                <div className={\"shareMessageTextFieldContainer\"}>\r\n                    <TextField\r\n                        className={\"shareMessageTextField\"}\r\n                        rows={3}\r\n                        multiline={true}\r\n                    />\r\n                </div>\r\n                <ShareSocialMedia url={ShareManager.shareResearch(researchId)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {forwardRef, useEffect, useImperativeHandle, useRef, useState} from \"react\";\r\nimport {animated, useChain, useSpring, config} from \"react-spring\";\r\n\r\nexport const Loading = () => {\r\n    const [animating, setAnimating] = useState(true);\r\n\r\n    /*TODO - Simplify spring refs generation*/\r\n    const spring1: any = useRef();\r\n    const props1 = useSpring({\r\n        ref: spring1,\r\n        from: {transform: \"translate3d(0px, 0px, 0px)\", opacity: 0},\r\n        to: async (next: any, cancel: any) => {\r\n            while (animating) {\r\n                await next({transform: \"translate3d(400px, 0px, 0px)\", opacity: 1});\r\n                await next({transform: \"translate3d(400px, 50px, 0px)\"});\r\n                await next({transform: \"translate3d(400px, 0px, 0px)\"});\r\n                await next({transform: \"translate3d(1200px, 0px, 0px)\", opacity: 0});\r\n                await next({transform: \"translate3d(0px, 0px, 0px)\"});\r\n            }\r\n        }\r\n    });\r\n\r\n    const spring2: any = useRef();\r\n    const props2 = useSpring({\r\n        ref: spring2,\r\n        from: {transform: \"translate3d(0px, 0px, 0px)\", opacity: 0},\r\n        to: async (next: any, cancel: any) => {\r\n            while (animating) {\r\n                await next({transform: \"translate3d(400px, 0px, 0px)\", opacity: 1});\r\n                await next({transform: \"translate3d(400px, 50px, 0px)\"});\r\n                await next({transform: \"translate3d(400px, 0px, 0px)\"});\r\n                await next({transform: \"translate3d(1200px, 0px, 0px)\", opacity: 0});\r\n                await next({transform: \"translate3d(0px, 0px, 0px)\"});\r\n            }\r\n        }\r\n    });\r\n\r\n    const spring3: any = useRef();\r\n    const props3 = useSpring({\r\n        ref: spring3,\r\n        from: {transform: \"translate3d(0px, 0px, 0px)\", opacity: 0},\r\n        to: async (next: any, cancel: any) => {\r\n            while (animating) {\r\n                await next({transform: \"translate3d(400px, 0px, 0px)\", opacity: 1});\r\n                await next({transform: \"translate3d(400px, 50px, 0px)\"});\r\n                await next({transform: \"translate3d(400px, 0px, 0px)\"});\r\n                await next({transform: \"translate3d(1200px, 0px, 0px)\", opacity: 0});\r\n                await next({transform: \"translate3d(0px, 0px, 0px)\"});\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    useChain([spring1, spring2, spring3], [0, 0.1, 0.2]);\r\n    useEffect(() => {\r\n        return () => {\r\n            setAnimating(false);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={{height: \"100%\", width: \"100%\", backgroundColor: \"yellow\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\"}}>\r\n            <animated.div style={{...props1, height: 25, width: 25, backgroundColor: \"red\", borderRadius: \"50%\", margin: 10}}/>\r\n            <animated.div style={{...props2, height: 25, width: 25, backgroundColor: \"red\", borderRadius: \"50%\", margin: 10}}/>\r\n            <animated.div style={{...props3, height: 25, width: 25, backgroundColor: \"red\", borderRadius: \"50%\", margin: 10}}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {createRef, useRef, useState} from \"react\";\r\nimport \"./RegisterResearchCarousel.css\"\r\nimport {STEPS} from \"../../utils/Steps\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Research} from \"../../utils/Data/ResearchData\";\r\nimport {ResearchQuestionData} from \"../../utils/Data/ResearchQuestionData\";\r\nimport {OptionState, QuestionsState, StepTwo} from \"./StepTwo\";\r\nimport {store} from \"../../redux/ConfigureStore\";\r\nimport {ResearchStatus} from \"../../utils/Data/ResearchStatus\";\r\nimport {FirestoreManager} from \"../../utils/Services/FirebaseManager/FirestoreManager\";\r\nimport {ShareResearch} from \"./ShareResearch\";\r\nimport { Loading } from \"../AnimatedComponents/Loading/Loading\";\r\n\r\ninterface LoadingState {\r\n    loading: boolean,\r\n    result: boolean\r\n}\r\n\r\nconst mapOptions = (options: OptionState[]): Map<number, string> => {\r\n    const optionsMap = new Map<number, string>();\r\n    options\r\n        .forEach((option) => optionsMap.set(option.index, option.payload!!));\r\n    return optionsMap;\r\n}\r\n\r\nconst getRoles = () => {\r\n    const owner = store.getState().user?.user.id;\r\n    const rolesMap = new Map<string, string>();\r\n    rolesMap.set(`${owner}`, \"owner\");\r\n    return rolesMap;\r\n}\r\n\r\n\r\nexport const RegisterCarousel = () => {\r\n    const [loading, setLoading] = useState<LoadingState>({loading: false, result: true});\r\n    const [actualStep, setStep] = useState(STEPS.ONE);\r\n    const [questions, saveQuestions] = useState<QuestionsState[] | null>(null);\r\n    const [error, setError] = useState<boolean>(false);\r\n    const research: Research = useRef(new Research()).current;\r\n    const firestoreManager = new FirestoreManager();\r\n\r\n    const _decreaseStep = () => setStep(actualStep-1);\r\n\r\n    const _renderBackStep = () => {\r\n        if (actualStep === STEPS.ONE || loading.loading) {\r\n            return (\r\n                <div />\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={\"previousStep\"} onClick={_decreaseStep}>\r\n                    <ChevronLeftIcon fontSize={\"large\"}/>\r\n                    Back {/*TODO - i18n*/}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const _renderErrorByEmptyTextField = (message: string, field: string | null) => {\r\n        if (error && (field === null || field === \"\")) {\r\n            return (\r\n                <div className={\"spanErrorContainer\"}>\r\n                    <span className={\"spanError\"}>\r\n                        Erro: O campo referente ao {message} deve estar preenchido. {/*TODO - i18n*/}\r\n                    </span>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<div/>)\r\n        }\r\n    }\r\n\r\n    const _fieldsAreValid = (fields: (string | null)[]): boolean => {\r\n        let isValid = true;\r\n        fields.forEach((field) => field == null || field === \"\" ? isValid = false : null)\r\n        return isValid;\r\n    }\r\n\r\n    const _stepTwoFieldsAreValid = (questions: QuestionsState[]): boolean => {\r\n        let isValid = true;\r\n        questions.forEach((question) => {\r\n            if (question.question == null || question.question === \"\") {\r\n                isValid = false;\r\n            }\r\n            question.options.forEach((option) => {\r\n                if (option.payload == null) {\r\n                    isValid = false;\r\n                }\r\n            })\r\n        })\r\n        return isValid;\r\n    }\r\n\r\n    const _renderNextStep = () => {\r\n        if (actualStep === STEPS.THREE) {\r\n            return (\r\n                <div/>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={\"nextStep\"} onClick={_increaseStep} >\r\n                    Next {/*TODO - i18n*/}\r\n                    <ChevronRightIcon fontSize={\"large\"}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const _renderStepOne = () => {\r\n        return (<div className={\"stepOneDiv\"}>\r\n            <div className={\"textField\"}>\r\n                <TextField\r\n                    placeholder={\"Titulo\"}\r\n                    fullWidth\r\n                    onChange={(event) => research.title = event.target.value}\r\n                    defaultValue={research.title}\r\n                />\r\n                {_renderErrorByEmptyTextField(\"titulo\", research.title)}\r\n            </div>\r\n            <div className={\"textField\"}>\r\n                <TextField\r\n                    placeholder={\"Sub-titulo\"}\r\n                    fullWidth\r\n                    onChange={(event) => research.subtitle = event.target.value}\r\n                    defaultValue={research.subtitle}\r\n                />\r\n                {_renderErrorByEmptyTextField(\"sub-titulo\", research.subtitle)}\r\n            </div>\r\n            <div className={\"textField\"}>\r\n                <TextField\r\n                    placeholder={\"Descrição\"}\r\n                    fullWidth\r\n                    multiline={true}\r\n                    rows={4}\r\n                    onChange={(event) => research.description = event.target.value}\r\n                    defaultValue={research.description}\r\n                />\r\n                {_renderErrorByEmptyTextField(\"descrição\", research.description)}\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    const _renderStepTwo = () => {\r\n        return (\r\n            <StepTwo error={error} onGetQuestions={(questions) => saveQuestions(questions)} savedQuestions={questions}/>\r\n        )\r\n    }\r\n\r\n    const _renderStepThree = () => {\r\n        return (\r\n            <ShareResearch/>\r\n        )\r\n    }\r\n\r\n    const _saveQuestions = async (research: Research): Promise<boolean> => {\r\n        research.questions = questions!!\r\n            .map(\r\n                (question) => new ResearchQuestionData(\r\n                    question.index.toString(),\r\n                    question.question,\r\n                    mapOptions(question.options),\r\n                    null\r\n                )\r\n            );\r\n        research.roles = getRoles();\r\n        research.status = ResearchStatus.OPEN;\r\n        const response = await firestoreManager.write(research);\r\n        return response.result;\r\n    }\r\n\r\n    const _increaseStep = () => {\r\n        setError(false);\r\n        switch (actualStep) {\r\n            case STEPS.ONE:\r\n                if (_fieldsAreValid([research.title, research.subtitle, research.description])) {\r\n                    setStep(actualStep+1);\r\n                } else {\r\n                    setError(true)\r\n                }\r\n                break;\r\n            case STEPS.TWO:\r\n                if (_stepTwoFieldsAreValid(questions!!)) {\r\n                    setStep(actualStep+1);\r\n                    _handleSavingQuestion(research);\r\n                } else {\r\n                    setError(true);\r\n                }\r\n                break;\r\n            case STEPS.THREE:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const _renderAsFromStep = () => {\r\n        switch (actualStep) {\r\n            case STEPS.ONE:\r\n                return _renderStepOne();\r\n            case STEPS.TWO:\r\n                return _renderStepTwo();\r\n            case STEPS.THREE:\r\n                /* todo check if is not null */\r\n                /* Disable back and next button while saving*/\r\n                /* Animation to indicates that is saving */\r\n                /* Animation to indicates that successful saved */\r\n                /* Animation to Indicates that failed saved */\r\n                /* Share options */\r\n                /* Show share options after successful save */\r\n                /* Show try again button option after failed saved */\r\n                if (loading.loading) {\r\n                    return <Loading/>\r\n                } else {\r\n                    return _renderStepThree();\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const _handleSavingQuestion = async (research: Research) => {\r\n        /* todo - check if that questions is already saved */\r\n        setLoading({loading: true, result: false});\r\n        /* Start saving animation */\r\n        const success = await _saveQuestions(research);\r\n        /* Stop saving animation */\r\n        if (success) {\r\n            /* Start finish animation */\r\n            /* On end animation show share component */\r\n            setLoading({loading: false, result: true});\r\n        } else {\r\n            /* Start end animation*/\r\n            /* On end animation show try again  component */\r\n            setLoading({loading: false, result: false});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"registerCarouselCard\"}>\r\n            <Card className={\"card\"} elevation={5} raised={true} >\r\n                <div className={\"header\"}>\r\n                    Informações {/*TODO - i18n*/}\r\n                </div>\r\n                <div className={\"contentDiv\"}>\r\n                    {_renderAsFromStep()}\r\n                </div>\r\n                <div className={\"optionsDiv\"}>\r\n                    {_renderBackStep()}\r\n                    {_renderNextStep()}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {RegisterCarousel} from \"../../Components/RegisterResearchCarousel/RegisterResearchCarousel\";\r\nimport \"./RegisterResearchScreen.css\";\r\n\r\nexport const RegisterResearchScreen = () => {\r\n    return (\r\n        <div className={\"registerScreenDiv\"}>\r\n            <RegisterCarousel/>\r\n        </div>\r\n    )\r\n}\r\n","import {UserData} from \"../../Components/AnswerResearchCarousel/AnswerResearchCarousel\";\r\nimport firebase from \"firebase\";\r\n\r\ninterface AnsweredQuestions {\r\n    question: number,\r\n    selectedOption: number\r\n}\r\n\r\nexport class AnswerData {\r\n    constructor( userData: UserData, answeredQuestions: AnsweredQuestions[] = [], status: \"progress\" | \"done\" = \"progress\") {\r\n        this.answeredQuestions = answeredQuestions;\r\n        this.userData = userData;\r\n        this.status = status;\r\n    }\r\n\r\n    private static TAG = \"AnswerData\";\r\n\r\n    userData: UserData;\r\n    answeredQuestions: AnsweredQuestions[];\r\n    status: \"progress\" | \"done\" ;\r\n\r\n    parseFirebase() {\r\n\r\n       const answeredQuestions: {\"questionId\": number, \"selectedOption\": number}[] = this.answeredQuestions\r\n            .map((answeredQuestion, index) =>({\r\n                \"questionId\": answeredQuestion.question,\r\n                    \"selectedOption\": answeredQuestion.selectedOption\r\n            }));\r\n\r\n        return {\r\n            \"answeredQuestions\": answeredQuestions,\r\n            \"userData\": {\r\n                \"email\": this.userData.email,\r\n                \"name\": this.userData.name\r\n            },\r\n            \"status\": this.status\r\n        }\r\n    }\r\n\r\n    static from(id: string, data:  firebase.firestore.DocumentData): AnswerData {\r\n        // console.log(data[\"answeredQuestion\"])\r\n        return new AnswerData(\r\n            {email: data[\"userData\"].email, name: data[\"userData\"].name},\r\n            data[\"answeredQuestion\"].map((answeredQuestion: any) => ({question: parseInt(answeredQuestion[\"questionId\"]), selectedOption: answeredQuestion[\"selectedOption\"]})),\r\n            data[\"status\"]\r\n        )\r\n    }\r\n\r\n}\r\n","import {AnswerData} from \"../../Data/AnswerData\";\r\nimport firebase from \"firebase\";\r\nimport {FirestoreManager} from \"../FirebaseManager/FirestoreManager\";\r\nimport {getStore} from \"../../../redux/ConfigureStore\";\r\nimport {saveAnswerResearchPayload, saveAnswersOfResearch} from \"../../../redux/Actions\";\r\n\r\n\r\ninterface AnswerResearchManagerResponse {\r\n    result: boolean,\r\n    error: any\r\n}\r\n\r\nexport interface EndAnswerResearchPayload {\r\n    researchId: string | null,\r\n    answerResearchId: string | null\r\n}\r\n\r\nexport interface SaveAnsweredQuestionPayload {\r\n    researchId: string | null,\r\n    answerResearchId: string | null,\r\n    answeredQuestionId: string | null,\r\n    selectedOption: number\r\n}\r\n\r\nexport class AnswerResearchManager {\r\n    constructor() {\r\n        this.firestore = firebase.firestore();\r\n    }\r\n\r\n    private firestore: firebase.firestore.Firestore;\r\n\r\n    async startQuestionnaire(researchId: string, answerData: AnswerData): Promise<AnswerResearchManagerResponse> {\r\n        try {\r\n            const res = await this\r\n                .firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .doc(researchId)\r\n                .collection(FirestoreManager.COLLECTIONS.ANSWERED_QUESTIONS)\r\n                .add(answerData.parseFirebase());\r\n            getStore().dispatch(saveAnswerResearchPayload({researchId, answerResearchId: res.id}));\r\n            return {result: true, error: null};\r\n        } catch (e) {\r\n            return {result: false, error: e.message};\r\n        }\r\n    }\r\n\r\n    async saveAnsweredQuestion(payload: SaveAnsweredQuestionPayload): Promise<AnswerResearchManagerResponse> {\r\n        /* TODO - Check if already have a answer data question with the same id of */\r\n        /* TODO - Try check if already have same selectedQuestionData on firestore*/\r\n        if (payload.researchId == null || payload.answeredQuestionId == null || payload.answerResearchId == null) return {result: false, error: \"Research payload is null\"}\r\n        try {\r\n            await this\r\n                .firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .doc(payload.researchId)\r\n                .collection(FirestoreManager.COLLECTIONS.ANSWERED_QUESTIONS)\r\n                .doc(payload.answerResearchId)\r\n                .update({\r\n                    answeredQuestion: firebase.firestore.FieldValue.arrayUnion({\r\n                        \"questionId\": payload.answeredQuestionId,\r\n                        \"selectedOption\": payload.selectedOption\r\n                    })\r\n                });\r\n            return {result: true, error: null};\r\n        } catch (e) {\r\n            return {result: false, error: e};\r\n        }\r\n\r\n        return {result: true, error: null}\r\n    }\r\n\r\n    async endQuestionnaire(payload: EndAnswerResearchPayload): Promise<AnswerResearchManagerResponse> {\r\n        if (payload.researchId == null || payload.answerResearchId == null) return {result: false, error: \"Payload is null\"};\r\n        try {\r\n            /*TODO - Success*/\r\n            await this\r\n                .firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .doc(payload.researchId)\r\n                .collection(FirestoreManager.COLLECTIONS.ANSWERED_QUESTIONS)\r\n                .doc(payload.answerResearchId)\r\n                .update({\r\n                    status: \"done\"\r\n                })\r\n            return {result: true, error: null};\r\n        } catch (e) {\r\n            /*TODO - Error*/\r\n            return {result: false, error: e}\r\n        }\r\n    }\r\n\r\n    async loadAnswersByResearch(researchId: string): Promise<AnswerResearchManagerResponse> {\r\n        try {\r\n            const answers = (await this\r\n                .firestore\r\n                .collection(FirestoreManager.COLLECTIONS.RESEARCH)\r\n                .doc(researchId)\r\n                .collection(FirestoreManager.COLLECTIONS.ANSWERED_QUESTIONS)\r\n                .get())\r\n                .docs\r\n                .map(\r\n                    (querySnapshot) =>\r\n                        AnswerData.from(querySnapshot.id, querySnapshot.data())\r\n                );\r\n\r\n\r\n            const answersOfResearch = {\r\n                researchId: researchId,\r\n                answers: answers\r\n            }\r\n            getStore().dispatch(saveAnswersOfResearch(answersOfResearch));\r\n            return {result: true, error: null};\r\n        } catch (e) {\r\n            return {result: false, error: e}\r\n        }\r\n    }\r\n\r\n}\r\n","import React, {useEffect, useRef} from \"react\";\r\nimport Chart from 'chart.js';\r\n\r\ninterface ChartProps {\r\n    data: any,\r\n    props?: any,\r\n    backgroundColors: string[],\r\n    labels: string[],\r\n    title: string,\r\n    type: \"bar\"\r\n}\r\n\r\nexport function ChartWrapper({type, title, labels, backgroundColors, data, props}: ChartProps) {\r\n    const chartRef = useRef<HTMLCanvasElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (chartRef.current) {\r\n            new Chart(chartRef.current, {\r\n                type,\r\n                data: {\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        label: '# of Votes',\r\n                        data: data,\r\n                        backgroundColor: backgroundColors,\r\n                        borderColor: \"rgba(0, 0, 0, 1)\",\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    title: {\r\n                        text: title,\r\n                        display: true\r\n                    },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [])\r\n    return (\r\n        <canvas ref={chartRef}/>\r\n    )\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport \"./Analysis.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AnswerResearchProps, ReduxState, ResearchProps} from \"../../redux/reducer\";\r\nimport {AnswerResearchManager} from \"../../utils/Services/AnswerResearchManager/AnswerResearchManager\";\r\nimport {ChartWrapper} from \"../../Components/Chart/ChartWrapper\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nconst randomColor = require('randomcolor');\r\n\r\ninterface DatasetProps {\r\n    questionId: number,\r\n    data: {option: number, count: number}[]\r\n}\r\n\r\nexport const Analysis = () => {\r\n    const TAG = \"Analysis\";\r\n    const {id} = useParams() as {id: string};\r\n    const [dataSet, setDataset] = useState<{researchId: string, dataSet: DatasetProps[]} | null>(null);\r\n    const [research, answers]: (ResearchProps | null | AnswerResearchProps)[] = useSelector((state: ReduxState) =>\r\n    [\r\n        state.researchs.find((research) => research.id === id) || null,\r\n        state.answersOfResearch as AnswerResearchProps\r\n    ]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    function computeAnswers(answers: AnswerResearchProps) {\r\n        const dataSetProps: DatasetProps[] = [];\r\n\r\n        answers.answers.forEach((answer) => {\r\n            answer.answeredQuestions.forEach((question) => {\r\n                const questionData = dataSetProps.find((questionDataset) => questionDataset.questionId === question[\"question\"]);\r\n                if (questionData) {\r\n                    const questionIndex = dataSetProps.indexOf(questionData);\r\n                    const optionData = dataSetProps[questionIndex].data.find((currentQuestion) => currentQuestion.option === question[\"selectedOption\"] );\r\n                    if (optionData) {\r\n                        const optionIndex = dataSetProps[questionIndex].data.indexOf(optionData);\r\n                        dataSetProps[questionIndex].data[optionIndex].count++;\r\n                    } else {\r\n                        dataSetProps[questionIndex].data.push({\r\n                            option: question[\"selectedOption\"],\r\n                            count: 1\r\n                        })\r\n                    }\r\n                } else {\r\n                    dataSetProps.push(\r\n                        {\r\n                            questionId: question[\"question\"],\r\n                            data: [\r\n                                {\r\n                                    option: question[\"selectedOption\"],\r\n                                    count: 1\r\n                                }\r\n                            ]\r\n                        }\r\n                    )\r\n                }\r\n            })\r\n        })\r\n        return dataSetProps;\r\n    }\r\n\r\n    async function loadAnswer(researchId: string) {\r\n        const answerResearchManager = new AnswerResearchManager();\r\n        const response = await answerResearchManager.loadAnswersByResearch(researchId);\r\n\r\n        if (response.result) {\r\n            console.log(TAG, \"Successful loaded answers of research.\");\r\n        } else {\r\n            console.log(TAG, \"Failure on load answer of research. Error: \", response.error);\r\n        }\r\n    }\r\n\r\n    function getLabels(options: Map<number, string>) {\r\n        const optionsArray = Array.from(options);\r\n        return optionsArray.map((option, index) => option[index]);\r\n    }\r\n\r\n    function renderOptionsChart(research: ResearchProps, dataSet: {researchId: string, dataSet: DatasetProps[]}) {\r\n        if ((answers as AnswerResearchProps).researchId !== research.id || research.id !== dataSet.researchId) {\r\n            return [];\r\n        } else {\r\n            return dataSet.dataSet.map(({data, questionId}) => {\r\n                const questionFromResearch = research.research.questions.find((question) => question.id === questionId.toString());\r\n                if (!questionFromResearch) throw new Error(\"Unknown question!\");\r\n                const optionsData = Array.from({length: data.length}).map(() => 0);\r\n                data.forEach((option) => optionsData[option.option] = option.count)\r\n                const backgroundColors = data.map(() => randomColor({\r\n                    count: 1,\r\n                    format: \"rgba\",\r\n                    alpha: 0.2\r\n                }));\r\n                // @ts-ignore\r\n                const labels: string[] = getLabels(questionFromResearch.options);\r\n                const title = questionFromResearch.question\r\n                if (!title) throw new Error(\"Title is empty!\");\r\n                return (\r\n                    <ChartWrapper data={optionsData} backgroundColors={backgroundColors} labels={labels}\r\n                                  title={title} type={\"bar\"}/>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    function renderCharts(dataSet: {researchId: string, dataSet: DatasetProps[]} | null) {\r\n        if (dataSet != null && dataSet.dataSet.length !== 0) {\r\n            return (\r\n                <div className={\"chart\"}>\r\n                    {renderOptionsChart(research as ResearchProps, dataSet)}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<div className={\"noDataAvailableContainer\"}>\r\n                <div className={\"noDataAvailableText\"}>\r\n                    No data available\r\n                </div>\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    function renderLoading() {\r\n        return (\r\n            <CircularProgress/>\r\n        )\r\n    }\r\n\r\n    function renderContent(content: {researchId: string, dataSet: DatasetProps[]} | null) {\r\n        if (loading) {\r\n            return (<div className={\"loadingContainer\"}>\r\n                {renderLoading()}\r\n            </div>)\r\n        } else {\r\n            return (\r\n                <div className={\"chartContainer\"}>\r\n                    {renderCharts(content)}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataset({researchId: id, dataSet: computeAnswers(answers as AnswerResearchProps)});\r\n    }, [answers])\r\n\r\n    useEffect(() => {\r\n        loadAnswer(id)\r\n            .then(() => {\r\n                setLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setLoading(false);\r\n            })\r\n    }, [id])\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"analysisRoot\"}>\r\n            {renderContent(dataSet)}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"./DashboardScreen.css\"\r\nimport {ReadResearchCarousel} from \"../../Components/ReadResearchCarousel/ReadResearchCarousel\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\nimport {SelectResearch} from \"../../Components/SelectResearch/SelectResearch\";\r\nimport {ResearchList} from \"../../Components/ResearchList/ResearchList\";\r\nimport {FirestoreManager} from \"../../utils/Services/FirebaseManager/FirestoreManager\";\r\nimport {generateFakeData} from \"../../utils/Data/FakeResearchData\";\r\nimport {Research} from \"../../utils/Data/ResearchData\";\r\nimport firebase from \"firebase\";\r\nimport {ReduxState} from \"../../redux/reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {RegisterResearchScreen} from \"../RegisterResearch/RegisterResearchScreen\";\r\nimport {Analysis} from \"../Analysis/Analysis\";\r\nexport const DashboardScreen = () => {\r\n    const { path } = useRouteMatch();\r\n    const [loading, setLoading] = useState(true);\r\n    const firestoreManager = new FirestoreManager();\r\n    useEffect(() => {\r\n        /* TODO - Find ways to reduce requests to firestore */\r\n        firestoreManager.read().then(() => {\r\n            setLoading(false);\r\n        })\r\n    }, [])\r\n    /* TODO - ADD LOADING */\r\n    const _renderPage = () => {\r\n        if (loading) {\r\n            return <div className={\"loadingIndicatorDiv\"}>\r\n                <CircularProgress/>\r\n            </div>\r\n        } else {\r\n            return (\r\n                <>\r\n                    <ResearchList/>\r\n                    <Switch>\r\n                        <Route path={path} exact component={SelectResearch}/>\r\n                        <Route path={`${path}/research/:id`} component={Analysis}/>\r\n                        <Route path={`${path}/register-research`} component={RegisterResearchScreen}/>\r\n                    </Switch>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className={\"mainContainerDashboardScreen\"}>\r\n            {_renderPage()}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport { Route, Switch, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport \"./MainScreen.css\"\r\nimport {ConfigurationScreen} from \"../ConfigurationScreen/ConfigurationScreen\";\r\nimport {AppToolbar} from \"../../Components/AppToolbar/AppToolbar\";\r\nimport {ReduxState} from \"../../redux/reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {DashboardScreen} from \"../DashboardScreen/DashboardScreen\";\r\nimport {RegisterResearchScreen} from \"../RegisterResearch/RegisterResearchScreen\";\r\nimport {ReadResearchCarousel} from \"../../Components/ReadResearchCarousel/ReadResearchCarousel\";\r\n\r\n\r\n\r\n\r\nexport const MainScreen = () => {\r\n    const history = useHistory();\r\n    let {path, url} = useRouteMatch();\r\n    const user = useSelector((state: ReduxState) => state.user);\r\n\r\n    /* TODO - FIX ME - Security\r\n    * USER CAN EDIT LOCAL STORAGE DATA AND THEN GET ACCESS TO MAIN SCREEN\r\n    * */\r\n\r\n    useEffect(() => {\r\n        if (user == null) {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [user])\r\n    console.log(\"path => \", path);\r\n    console.log(\"url => \", url);\r\n    return (\r\n        <div>\r\n            <AppToolbar/>\r\n            <Switch>\r\n                <Route path={path} component={DashboardScreen}/>\r\n                {/*<Route path={`${path}/configurations`} component={ConfigurationScreen}/>*/}\r\n                {/*<Route path={`${path}/register-research`} component={RegisterResearchScreen}/>*/}\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {ReduxState} from \"../../redux/reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const RootDirectory = () => {\r\n    const history = useHistory();\r\n    const user = useSelector((state: ReduxState) => state.user);\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            history.push(\"/dashboard\");\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    })\r\n    return (\r\n        <div/>\r\n    )\r\n}\r\n","export class Validators {\r\n    static isEmailValid(email: string) {\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return regex.test(email.toLocaleLowerCase());\r\n    }\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport \"./Greeting.css\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {Validators} from \"../../utils/Validators/Validators\";\r\nimport {UserData} from \"./AnswerResearchCarousel\";\r\nimport {isDevEnv} from \"../../utils/utils\";\r\n\r\n\r\ninterface Status {\r\n    error: boolean,\r\n    message: string\r\n}\r\n\r\ninterface InputStatus {\r\n    email: Status,\r\n    name: Status\r\n}\r\n\r\ninterface GreetingProps {\r\n    title: string,\r\n    description: string,\r\n    onStartQuestionnaire: (userData: UserData) => void\r\n}\r\n\r\n\r\nexport const Greeting = ({title, description, onStartQuestionnaire}: GreetingProps) => {\r\n    const [inputsStatus, setInputStatus] = useState<InputStatus>({\r\n        email: {error: false, message: \"\"},\r\n        name: {error: false, message: \"\"}\r\n    });\r\n    const [userData, setUserData] = useState<{ email: string, name: string }>({email: isDevEnv() ? \"reberthkss@outlook.com\" : \"\", name: isDevEnv() ? \"reberth\": \"\"});\r\n\r\n    const onBlurEmail = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        if (!Validators.isEmailValid(event.target.value)) {\r\n            setInputStatus({...inputsStatus, email: {error: true, message: \"E-mail inválido!\"}})\r\n        } else {\r\n            setUserData({...userData, email: event.target.value});\r\n        }\r\n    }\r\n\r\n    const onBlurName = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        if (event.target.value.length === 0) {\r\n            setInputStatus({...inputsStatus, name: {error: true, message: \"Nome inválido!\"}})\r\n        } else {\r\n            setUserData({...userData, name: event.target.value});\r\n        }\r\n    }\r\n\r\n    const onFocusEmail = () => {\r\n        setInputStatus({...inputsStatus, email: {error: false, message: \"\"}})\r\n    }\r\n\r\n    const onFocusName = () => {\r\n        setInputStatus({...inputsStatus, name: {error: false, message: \"\"}})\r\n    }\r\n\r\n    const handleStartEvent = () => {\r\n        if (userData.name.length === 0 && userData.email.length === 0) {\r\n            setInputStatus({\r\n                email: {error: true, message: \"Digite um e-mail!\"},\r\n                name: {error: true, message: \"Digite um nome!\"}\r\n            });\r\n        } else if (userData.name.length === 0) {\r\n            setInputStatus({...inputsStatus, name: {error: true, message: \"Digite um nome!\"}});\r\n        } else if (userData.email.length === 0) {\r\n            setInputStatus({...inputsStatus, email: {error: true, message: \"Digite um e-mail!\"}});\r\n        } else {\r\n            onStartQuestionnaire(userData);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"greetingRootContainer\"}>\r\n            <div className={\"greetingTitleContainer\"}>\r\n                {title}\r\n            </div>\r\n            <div className={\"greetingDescriptionContainer\"}>\r\n                {description}\r\n            </div>\r\n            <div className={\"greetingUserDataContainer\"}>\r\n                <div className={\"inputContainer\"}>\r\n                    <TextField id=\"outlined-basic\" label=\"E-mail\" variant=\"outlined\" required\r\n                               fullWidth\r\n                               type={\"email\"}\r\n                               error={inputsStatus.email.error}\r\n                               helperText={inputsStatus.email.message}\r\n                               onBlur={onBlurEmail}\r\n                               onFocus={onFocusEmail}\r\n                    />\r\n                </div>\r\n                <div className={\"inputContainer\"}>\r\n                    <TextField id=\"outlined-basic\" label=\"Nome\" variant=\"outlined\" required\r\n                               fullWidth\r\n                               type={\"text\"}\r\n                               error={inputsStatus.name.error}\r\n                               helperText={inputsStatus.name.message}\r\n                               onChange={onBlurName}\r\n                               onFocus={onFocusName}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={\"greetingNextSectionContainer\"}>\r\n                <div className={\"startAnswerButton\"} style={{borderRadius: 5}} onClick={handleStartEvent}>\r\n                    COMEÇAR {/*TODO - i18n*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport \"./AnswerQuestion.css\";\r\nimport {ResearchQuestionData} from \"../../utils/Data/ResearchQuestionData\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nimport {UserData} from \"./AnswerResearchCarousel\";\r\n\r\ninterface AnswerQuestionProps {\r\n    questions: ResearchQuestionData[],\r\n    onFinishAnswerQuestion: () => void,\r\n    onAnswerQuestion: (question: ResearchQuestionData, selectedOption: number) => void\r\n    userData: UserData\r\n}\r\n\r\nexport const AnswerQuestion = ({questions, onFinishAnswerQuestion, onAnswerQuestion, userData}: AnswerQuestionProps) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState<number>(0);\r\n\r\n    if (questions[currentQuestion].id === null) throw new Error(\"Question is null\");\r\n    if (questions[currentQuestion].options === null) throw new Error(\"None options are available\");\r\n\r\n    const goBackClick = () => {\r\n        if (currentQuestion === 0) {\r\n            throw new Error(\"Already in the first question\")\r\n        } else {\r\n            setCurrentQuestion(currentQuestion-1);\r\n        }\r\n    }\r\n\r\n    const goBackIsDisabled = () => {\r\n        return currentQuestion === 0;\r\n    }\r\n\r\n    const goNextClick = () => {\r\n        if (currentQuestion === questions.length-1) {\r\n            throw new Error(\"Already in the last question\");\r\n        } else {\r\n            setCurrentQuestion(currentQuestion+1);\r\n        }\r\n    }\r\n\r\n    const goNextIsDisabled = () => {\r\n        return currentQuestion === questions.length-1;\r\n    }\r\n\r\n    const handleOptionSelect = (selectedOptionIndex: number) => {\r\n        if (selectedOptionIndex < 0 || selectedOptionIndex > questions[currentQuestion].options!!.size + 1) {\r\n            throw new Error(\"Selected options doesn't exists\");\r\n        } else {\r\n            /*Save locally on component, then save globally (onAnswerQuestion) and make async call\r\n            * to save on firebase\r\n            * */\r\n            questions[currentQuestion].selectedOption = selectedOptionIndex;\r\n            onAnswerQuestion(questions[currentQuestion], selectedOptionIndex);\r\n            if (currentQuestion === questions.length - 1) {\r\n                onFinishAnswerQuestion()\r\n            } else {\r\n                setCurrentQuestion(currentQuestion + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    const GetOptions = () => {\r\n       return Array.from(questions[currentQuestion].options!!).map((item, index) => {\r\n           return (\r\n               <div className={\"answerQuestionOption\"} style={{borderRadius: 5}} onClick={() => handleOptionSelect(index)}>\r\n                    {item[index]}\r\n                </div>\r\n            )\r\n        })\r\n\r\n    }\r\n    return (\r\n        <div className={\"questionRootContainer\"}>\r\n            <div className={\"headerContainer\"}>\r\n                Pergunta {parseInt(questions[currentQuestion].id!!) + 1}\r\n            </div>\r\n            <div className={\"questionsContainer\"}>\r\n                <div className={\"answerQuestionGoBackContainer\"}>\r\n                    <IconButton\r\n                        onClick={goBackClick}\r\n                        disabled={goBackIsDisabled()}\r\n                    >\r\n                        <ChevronLeftIcon fontSize={\"large\"}/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={\"answerQuestionContentContainer\"}>\r\n                    <div className={\"answerQuestionTitleContainer\"}>\r\n                        {userData.name + ', ' + questions[currentQuestion].question}\r\n                    </div>\r\n                    <div className={\"answerQuestionOptionsContainer\"}>\r\n                        <Scrollbar className={\"scrollBar\"}>\r\n                            {GetOptions()}\r\n                        </Scrollbar>\r\n                    </div>\r\n                </div>\r\n                <div className={\"answerQuestionGoNextContainer\"}>\r\n                   <IconButton\r\n                       onClick={goNextClick}\r\n                       disabled={goNextIsDisabled()}\r\n                   >\r\n                       <ChevronRightIcon fontSize={\"large\"}/>\r\n                   </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./Conclusion.css\";\r\nimport {ShareSocialMedia} from \"../ShareSocialMedia/ShareSocialMedia\";\r\n\r\nconst defaultFinishMessage = \"That's question were be registered on the Answer Anything servers. All data is storage following all privacy policies.\"; /*TODO - i18n*/\r\n\r\nexport const Conclusion = ({finishMessage, researchUrl}: {finishMessage: string, researchUrl: string}) => {\r\n    return (\r\n        <div className={\"conclusionRootContainer\"}>\r\n            <div className={\"messagesContainer\"}>\r\n                <div className={\"messageContainer\"}>\r\n                    {finishMessage}\r\n                </div>\r\n                <div className={\"thankYouContainer\"}>\r\n                    {/*CHANGE FOR REMOTE CONFIG VALUES*/}\r\n                    Thank you for answer our research! {/*TODO - i18n*/}\r\n                </div>\r\n            </div>\r\n            <ShareSocialMedia url={researchUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nConclusion.defaultProps = {\r\n    finishMessage: defaultFinishMessage\r\n}\r\n","import React, {useState} from \"react\";\r\nimport \"./AnswerResearchCarousel.css\"\r\nimport {Card} from \"@material-ui/core\";\r\nimport {STEPS} from \"../../utils/Steps\";\r\nimport { Greeting } from \"./Greeting\";\r\nimport {AnswerQuestion} from \"./AnswerQuestion\";\r\nimport {Conclusion} from \"./Conclusion\";\r\nimport {Research} from \"../../utils/Data/ResearchData\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport {ResearchQuestionData} from \"../../utils/Data/ResearchQuestionData\";\r\nimport {AnswerData} from \"../../utils/Data/AnswerData\";\r\nimport {AnswerResearchManager} from \"../../utils/Services/AnswerResearchManager/AnswerResearchManager\";\r\nimport {getStore} from \"../../redux/ConfigureStore\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {ShareManager} from \"../../utils/Services/ShareManager/ShareManager\";\r\n\r\ninterface AnswerResearchCarouselProps {\r\n    researchId: string,\r\n    research: Research,\r\n    onGetSelectedOption: (question: ResearchQuestionData, selectedOption: number) => void\r\n}\r\n\r\nexport interface UserData {email: string, name: string}\r\n\r\nexport const AnswerResearchCarousel = ({ researchId, research, onGetSelectedOption}: AnswerResearchCarouselProps) => {\r\n    const [currentStep, setStep] = useState<number>(STEPS.ONE);\r\n    const [answerData, setAnswerData] = useState<AnswerData | null>(null);\r\n\r\n    const _handleEndOfResearch = async () => {\r\n        const answerResearchPayload = getStore().getState().answerResearchPayload;\r\n        const answerResearchManager = new AnswerResearchManager();\r\n        const resFromFirebase = await answerResearchManager.endQuestionnaire({\r\n            researchId: answerResearchPayload?.researchId || null,\r\n            answerResearchId: answerResearchPayload?.answerResearchId || null\r\n        });\r\n\r\n        if (resFromFirebase.result) {\r\n            setStep(STEPS.THREE);\r\n        } else {\r\n            console.log(\"Error => \", resFromFirebase.error);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const GetContent = () => {\r\n        const answerResearchManager = new AnswerResearchManager();\r\n        switch (currentStep) {\r\n            case STEPS.ONE:\r\n                return (\r\n                    <Greeting\r\n                        onStartQuestionnaire={async ({email, name}) => {\r\n                            const answerData = new AnswerData({email, name});\r\n                            const res = await answerResearchManager.startQuestionnaire(researchId, answerData);\r\n                            if (res.result) {\r\n                                setAnswerData(answerData);\r\n                                setStep(1);\r\n                            } else {\r\n                                /*TODO - display error*/\r\n                                console.log(res.error);\r\n                            }\r\n\r\n                        }}\r\n                        title={research.title!!}\r\n                        description={research.description!!}/>\r\n                )\r\n            case STEPS.TWO:\r\n                if (answerData === null) throw new Error(\"Answer data is invalid\");\r\n                return (\r\n                    <AnswerQuestion questions={research.questions}\r\n                                    userData={answerData.userData}\r\n                                    onFinishAnswerQuestion={_handleEndOfResearch}\r\n                                    onAnswerQuestion={onGetSelectedOption}\r\n                    />\r\n                )\r\n            case STEPS.THREE:\r\n                const answerResearchPayload = getStore().getState().answerResearchPayload;\r\n                return (\r\n                    <Conclusion researchUrl={ShareManager.shareResearch(answerResearchPayload?.researchId || null)}/>\r\n                )\r\n            default:\r\n                throw new Error(\"Step not found\");\r\n        }\r\n    }\r\n\r\n    const GetBackArrow = () => {\r\n        if (currentStep === STEPS.ONE) return null;\r\n\r\n        return (\r\n            <div className={\"backStepOption\"} onClick={() => setStep(currentStep-1)}>\r\n                <ChevronLeftIcon fontSize={\"large\"}/>\r\n                Voltar {/*TODO - i18n*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const GetNextArrow = () => {\r\n        let  allResearchsIsAnswered = 1;\r\n        research.questions.forEach((question) => {\r\n            if (question.selectedOption == null) {\r\n                allResearchsIsAnswered = 0;\r\n            }\r\n        });\r\n\r\n        if (currentStep === STEPS.ONE || currentStep === STEPS.THREE || !allResearchsIsAnswered) return null;\r\n\r\n        return (\r\n            <div className={\"nextStepOption\"} onClick={() => setStep(currentStep+1)}>\r\n                Próximo {/*TODO - i18n*/}\r\n                <ChevronRightIcon fontSize={\"large\"}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const GetFooter = () => {\r\n        return (\r\n            <div className={\"footerOptions\"}>\r\n                {GetBackArrow()}\r\n                {GetNextArrow()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={\"rootContainer\"}>\r\n            <div className={\"carouselContainer\"}>\r\n                <Card className={\"cardContainer\"} elevation={5}>\r\n                    {GetContent()}\r\n                    {GetFooter()}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useEffect, useReducer, useState} from \"react\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport \"./AnswerResearch.css\"\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport {AnswerResearchCarousel} from \"../../Components/AnswerResearchCarousel/AnswerResearchCarousel\";\r\nimport {Research} from \"../../utils/Data/ResearchData\";\r\nimport {ResearchQuestionData} from \"../../utils/Data/ResearchQuestionData\";\r\nimport {FirestoreManager} from \"../../utils/Services/FirebaseManager/FirestoreManager\";\r\nimport {ReduxState} from \"../../redux/reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AnswerData} from \"../../utils/Data/AnswerData\";\r\nimport {AnswerResearchManager} from \"../../utils/Services/AnswerResearchManager/AnswerResearchManager\";\r\n\r\nexport const AnswerResearchScreen = () => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [research, updateResearch] = useState<Research | null>(null);\r\n    const [isInvalidResearch, setIsInvalidResearch] = useState(false);\r\n    const {answerResearchPayload} = useSelector((state: ReduxState) => state);\r\n    const history = useHistory();\r\n    const params: any = useParams();\r\n    const id = params.id || {id: null}\r\n    const currentResearch: Research | null = useSelector((state: ReduxState) => state.research);\r\n    const TAG = \"AnswerResearch\";\r\n\r\n    const loadResearch = async (id: string) => {\r\n        const firestoreManager = new FirestoreManager();\r\n        setLoading(true);\r\n        const result = await firestoreManager.find(id);\r\n        if (result.result) {\r\n            updateResearch(currentResearch);\r\n        } else {\r\n            setIsInvalidResearch(true);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleOptionSelection = async (question: ResearchQuestionData, selectedOption: number) => {\r\n        if (research === null ) return ;\r\n        const answerResearchManager = new AnswerResearchManager();\r\n        const questionPosition = research\r\n            .questions\r\n            .indexOf(question);\r\n        research.questions[questionPosition].selectedOption = selectedOption;\r\n        const newResearch = new Research(research.title, research.subtitle, research.description, research.questions, research.status, research.roles);\r\n        const responseOnSave = await answerResearchManager.saveAnsweredQuestion({\r\n            researchId: answerResearchPayload?.researchId || null,\r\n            answerResearchId: answerResearchPayload?.answerResearchId || null,\r\n            answeredQuestionId: question.id,\r\n            selectedOption: selectedOption\r\n        });\r\n\r\n        if (responseOnSave.result) {\r\n            /* TODO - Success*/\r\n        } else {\r\n            /* TODO - Error*/\r\n        }\r\n\r\n        /*TODO - MAKE A CALL TO REGISTER A ANSWER*/\r\n        updateResearch(newResearch);\r\n    }\r\n\r\n    const Content = () => {\r\n        if (loading) {\r\n            /*TODO - fix center position*/\r\n          // return ( <Loading />)\r\n            return (\r\n                <div className={\"loading\"}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            )\r\n        } else if (research != null) {\r\n            return (\r\n                <div className={\"mainContent\"}>\r\n                    {/*TODO - ADD A LOGO TO RENDER ON THE TOP LEFT CORNER OF SITE*/}\r\n                    <AnswerResearchCarousel\r\n                        researchId={id}\r\n                        research={research}\r\n                        onGetSelectedOption={handleOptionSelection}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadResearch(id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isInvalidResearch) history.replace(\"/404\");\r\n    }, [isInvalidResearch]);\r\n\r\n    return (\r\n        <div className={\"rootAnswerResearch\"}>\r\n            {/*TODO ADD BACKGROUND*/}\r\n            {Content()}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport {NotFound} from \"./Screen/NotFound\";\r\nimport {LoginScreen} from \"./Screen/LoginScreen/LoginScreen\";\r\nimport {MainScreen} from \"./Screen/MainScreen/MainScreen\";\r\nimport {RootDirectory} from \"./Screen/RootDiretory/RootDirectory\";\r\nimport {AnswerResearchScreen} from \"./Screen/AnswerResearch/AnswerResearchScreen\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <Router>\r\n          <div>\r\n              <Switch>\r\n                  <Route path={\"/\"} exact component={RootDirectory}/>\r\n                  <Route path=\"/dashboard\"  component={MainScreen}/>\r\n                  <Route path=\"/login\"  component={LoginScreen}/>\r\n                  <Route exact path={\"/researchs/:id\"} component={AnswerResearchScreen}/>\r\n                  <Route path={\"*\"} component={NotFound}/>\r\n              </Switch>\r\n          </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as firebase from \"firebase/app\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst prodConfig = {\r\n    apiKey: \"AIzaSyDBobOssi0rAN6EIz6lroG5_nWXG6SCu4Q\",\r\n    authDomain: \"answeranything-ce6e4.firebaseapp.com\",\r\n    databaseURL: \"https://answeranything-ce6e4.firebaseio.com\",\r\n    projectId: \"answeranything-ce6e4\",\r\n    storageBucket: \"answeranything-ce6e4.appspot.com\",\r\n    messagingSenderId: \"22067167918\",\r\n    appId: \"1:22067167918:web:e75453648307b089ebe33f\",\r\n    measurementId: \"G-1M53QVVXGC\"\r\n};\r\n\r\nconst devConfig = {\r\n    apiKey: \"AIzaSyDBobOssi0rAN6EIz6lroG5_nWXG6SCu4Q\",\r\n    authDomain: \"answeranything-ce6e4.firebaseapp.com\",\r\n    databaseURL: \"https://answeranything-ce6e4.firebaseio.com\",\r\n    projectId: \"answeranything-ce6e4\",\r\n    storageBucket: \"answeranything-ce6e4.appspot.com\",\r\n    messagingSenderId: \"22067167918\",\r\n    appId: \"1:22067167918:web:d0c72a3591c9cbd3ebe33f\",\r\n    measurementId: \"G-65DDE6TH25\"\r\n};\r\n\r\n\r\n\r\nexport const getEnvironment = () => {\r\n    return (!process.env.NODE_ENV || process.env.NODE_ENV === 'development' ) ? devConfig : prodConfig;\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport { Provider } from 'react-redux';\nimport {store, persistor} from \"./redux/ConfigureStore\";\nimport {getEnvironment} from \"./utils/config\";\nimport firebase from \"firebase\";\n\nfirebase.initializeApp(getEnvironment())\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n              <App />\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}